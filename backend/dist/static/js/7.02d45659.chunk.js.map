{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseEach.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_createBaseEach.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/find.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_createFind.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","defineProperty","object","key","value","configurable","enumerable","writable","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","getNative","func","e","baseForOwn","baseEach","createBaseEach","defaults","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","undefined","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","position","weight","addBox","Arc","Line","Point","Rectangle","toFinite","result","remainder","toNumber","INFINITY","MAX_INTEGER","array","predicate","fromIndex","fromRight","index","isArrayLike","eachFunc","collection","iteratee","iterable","filterByPosition","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","item","boxes","push","removeBox","layoutItem","indexOf","splice","configure","prop","props","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","concat","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","label","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","display","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","map","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","id","Array","toString","call","isObject","defaultValue","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","getValueOrDefault","getValueAtIndexOrDefault","baseFindIndex","baseIteratee","toInteger","nativeMax","find","createFind","baseIsEqual","other","findIndexFunc","Chart","Animation","animationService","elements","Interaction","platform","plugins","Scale","scaleService","Tooltip","register","window","Legend","legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","console","error","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","get","set","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","native","parseVisibleItems","handler","meta","j","jlen","data","datasets","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","_datasetIndex","x-axis","point","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","d","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","process","__webpack_exports__","Doughnut","Pie","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_DECRYPT_PASSWORD","REACT_APP_DECRYPT_EMAIL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","_this2","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","pid","otherProps","rest","_props2","node","defaultProps","_props3","createElement","onClick","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_idMaker","random","_canvasId","_setCanvasId","document","getElementById","className","parentNode","appendChild","classList","remove","add","titleLines","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","factory","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator"],"mappings":"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","file":"static/js/7.02d45659.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}