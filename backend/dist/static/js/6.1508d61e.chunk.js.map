{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/_baseEach.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_createBaseEach.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/find.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_createFind.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","defineProperty","object","value","configurable","enumerable","writable","defaults","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","undefined","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","position","weight","addBox","Arc","Line","Point","Rectangle","getNative","func","e","toFinite","result","remainder","toNumber","INFINITY","MAX_INTEGER","baseForOwn","baseEach","createBaseEach","filterByPosition","array","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","item","boxes","push","removeBox","layoutItem","index","indexOf","splice","configure","prop","props","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","concat","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","label","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","display","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","map","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","predicate","fromIndex","fromRight","isArrayLike","eachFunc","collection","iteratee","iterable","uid","id","Array","toString","call","isObject","defaultValue","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","getValueOrDefault","getValueAtIndexOrDefault","baseFindIndex","baseIteratee","toInteger","nativeMax","find","createFind","baseIsEqual","other","findIndexFunc","Chart","Animation","animationService","elements","Interaction","platform","plugins","Scale","scaleService","Tooltip","register","window","Legend","legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","console","error","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","get","set","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","native","parseVisibleItems","handler","meta","j","jlen","data","datasets","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","_datasetIndex","x-axis","point","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","d","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","process","__webpack_exports__","Doughnut","Pie","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","_this2","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","pid","otherProps","rest","_props2","node","defaultProps","_props3","createElement","onClick","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_idMaker","random","_canvasId","_setCanvasId","document","getElementById","className","parentNode","appendChild","classList","remove","add","titleLines","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","factory","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator"],"mappings":"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CAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACArzB,KAAA,YACAszB,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACA10B,MAAA,UACA20B,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAl2B,QAAA,YACAm2B,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,c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","file":"static/js/6.1508d61e.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}