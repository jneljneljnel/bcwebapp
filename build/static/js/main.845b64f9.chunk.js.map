{"version":3,"sources":["polyfill.js","App.js","serviceWorker.js","index.js"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","loading","react_default","a","createElement","className","fakeAuth","isAuthenticated","authenticate","cb","this","setTimeout","signout","Auth","state","redirectToReferrer","un","pw","fail","login","process","_this","setState","_this2","reactstrap_es","md","addonType","type","value","onChange","e","target","placeholder","autoComplete","xs","Link","to","color","onClick","Component","PrivateRoute","_ref","component","rest","Object","objectWithoutProperties","Route","assign","render","props","Redirect","DefaultLayout","Loadable","loader","Promise","all","__webpack_require__","then","bind","Register","Page404","Page500","App","HashRouter","Switch","exact","path","name","App_PrivateRoute","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.845b64f9.chunk.js","sourcesContent":["/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\nimport 'core-js/es6/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es6/set'\nimport 'core-js/es7/object'\nimport 'core-js/es6/promise'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Redirect, Switch, Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\n// import { renderRoutes } from 'react-router-config';\nimport Loadable from 'react-loadable';\nimport './App.scss';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\"><div className=\"sk-spinner sk-spinner-pulse\"></div></div>;\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb) {\n    this.isAuthenticated = true\n    setTimeout(cb, 100)\n  },\n  signout(cb) {\n    this.isAuthenticated = false\n    setTimeout(cb, 100)\n  }\n}\n//\n// class Auth2 extends React.Component {\n//   state = {\n//     redirectToReferrer: false\n//   }\n//   login = () => {\n//     fakeAuth.authenticate(() => {\n//       this.setState(() => ({\n//         redirectToReferrer: true\n//       }))\n//     })\n//   }\n//   render() {\n//     const { from } = this.props.location.state || { from: { pathname: '/' } }\n//     const { redirectToReferrer } = this.state\n//\n//     if (redirectToReferrer === true) {\n//       return <Redirect to={from} />\n//     }\n//\n//     return (\n//       <div>\n//         <p>You must log in to view the page</p>\n//         <button onClick={this.login}>Log in</button>\n//       </div>\n//     )\n//   }\n// }\n\nclass Auth extends Component {\n  state = {\n    redirectToReferrer: false,\n    un:'',\n    pw:'',\n    fail:''\n  }\n  login = () => {\n    if(this.state.un == process.env.REACT_APP_UN && this.state.pw == process.env.REACT_APP_PW){\n      fakeAuth.authenticate(() => {\n        this.setState(() => ({\n          redirectToReferrer: true\n        }))\n      })\n    }\n    else{\n      this.state.fail = true\n    }\n  }\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      {\n                        this.state.fail ?\n                        <p className=\"text-muted\">Authentication failed</p>\n                        :\n                        ''\n                      }\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"text\" value={this.state.un} onChange={(e)=>this.setState({un:e.target.value})} placeholder=\"Username\" autoComplete=\"username\" />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input type=\"password\"  value={this.state.pw} onChange={(e)=>this.setState({pw:e.target.value})} placeholder=\"Password\" autoComplete=\"current-password\" />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                        <Link to='/dashboard'>\n                          <Button color=\"primary\" onClick={this.login} className=\"px-4\">Login</Button>\n                        </Link>\n                        </Col>\n                        <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\">Forgot password?</Button>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n  fakeAuth.isAuthenticated === true\n    ? <Component {...props} />\n    : <Redirect to='/login' />\n)} />\n)\n\n// Containers\nconst DefaultLayout = Loadable({\n  loader: () => import('./containers/DefaultLayout'),\n  loading\n});\n\n// Pages\nconst Login = Loadable({\n  loader: () => import('./views/Pages/Login'),\n  loading\n});\n\nconst Register = Loadable({\n  loader: () => import('./views/Pages/Register'),\n  loading\n});\n\nconst Page404 = Loadable({\n  loader: () => import('./views/Pages/Page404'),\n  loading\n});\n\nconst Page500 = Loadable({\n  loader: () => import('./views/Pages/Page500'),\n  loading\n});\n\nclass App extends Component {\n\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/login\" name=\"Login Page\" component={Auth} />\n          <Route exact path=\"/register\" name=\"Register Page\" component={Register} />\n          <Route exact path=\"/404\" name=\"Page 404\" component={Page404} />\n          <Route exact path=\"/500\" name=\"Page 500\" component={Page500} />\n          <PrivateRoute path=\"/\" name=\"Home\" component={DefaultLayout} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}