{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseEach.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_createBaseEach.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/find.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_createFind.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","defineProperty","object","key","value","configurable","enumerable","writable","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","isObject","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","replace","isBinary","test","slice","getNative","func","e","baseForOwn","baseEach","createBaseEach","defaults","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","undefined","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","position","weight","addBox","Arc","Line","Point","Rectangle","toFinite","result","remainder","toNumber","INFINITY","MAX_INTEGER","array","predicate","fromIndex","fromRight","index","isArrayLike","eachFunc","collection","iteratee","iterable","filterByPosition","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","item","boxes","push","removeBox","layoutItem","indexOf","splice","configure","prop","props","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","concat","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","label","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","isArray","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","display","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","map","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","uid","id","Array","toString","call","defaultValue","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","getValueOrDefault","getValueAtIndexOrDefault","baseFindIndex","baseIteratee","toInteger","nativeMax","find","createFind","baseIsEqual","findIndexFunc","Chart","Animation","animationService","elements","Interaction","platform","plugins","Scale","scaleService","Tooltip","register","window","Legend","legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","obj","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","console","error","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","get","set","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","native","parseVisibleItems","handler","meta","j","jlen","data","datasets","isDatasetVisible","getDatasetMeta","element","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","dataset","datasetIndex","_index","modes","single","_datasetIndex","x-axis","point","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","clear","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","config","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","d","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","process","__webpack_exports__","Doughnut","Pie","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_DECRYPT_PASSWORD","REACT_APP_DECRYPT_EMAIL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","_this2","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","pid","otherProps","rest","_props2","node","defaultProps","_props3","createElement","onClick","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_idMaker","random","_canvasId","_setCanvasId","document","getElementById","className","parentNode","appendChild","classList","remove","add","titleLines","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","factory","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator"],"mappings":"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A,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACA10B,MAAA,UACA20B,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAl2B,QAAA,YACAm2B,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACA55B,IAAA,UACA65B,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cAC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","file":"static/js/8.c9ff5ff7.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;"],"sourceRoot":""}